from very_basic import *

# ako neces da gledas posebne testove, vec samo krajnji rezultat testiranja funkcije, stavi ovo na False
DEBUG = True

if __name__ == "__main__":
	Test(min_function, more_info=DEBUG).run_multiple_tests([
		([6395, -913, 7156, 9661, -5963, 3635, -8001, 1255, -774, -9095, -1155, -1917, 7998, -2863], -9095),
		([5856, -4326, -2667, 5120, 3977, 529, -2107, -4171, 410, -1698, 9933, -4389, 3316, -182, 557], -4389),
		([9140, 178, -9009, 4300, -2178, -1190, 1470, -8422, -3793, 3089, -363, 9900, 2795, -3054, 2635, -5388], -9009),
		([-4075, 8035, 3741, -2498, 8716, -4943, -1720, 1956, 122, -9151, 6720], -9151),
		([-2700, -9832, -1843, 7554, -3791, 7156, 5603, -1611, -9002, -8784, -2033, 1174, 1891, -9124, 9990, 3483, -6148], -9832),
		([7544, 3273, 3402, -2328, 7229, -3448, -979, 4804], -3448),
		([8316, 6734, -8867, 8953, -6377, -8279, 3782, 1477, -5427, -4304, -4626, -5348, 3665], -8867),
		([8608, 3406, -2328, 1377, -2294], -2328),
		([-733, -5676, 9299, -7311, -6443, 7223, -7768, -6766, 106, 2873, -1548, 9272, 7960, 827, -9344, -4173, -856, -6162], -9344),
		([2861, 7226, 2498, 8692, -4396, -3761, 5354, 1464, 6061, -6272, -5943, 9089, 1219, -4940, 1576, -8003, 7326, 338, 6912], -8003),
	])

	Test(max_function, more_info=DEBUG).run_multiple_tests([
		([6580, 6901, 6804, -8612, 6959, -1924, 7543, 1249, 79, 6627, -7800], 7543),
		([-1196, -7446, 1359, -3303, 8023, 5686, -5764, -1029, 4066, 8726], 8726),
		([-7147, -7453, 6371, 6753, -7921, -3602, 6641, 1384, -4743, -2085, -2452], 6753),
		([-3128, 251, -4682, -8189, 4627, -5004, -2941, -1605, 50, 1010, 6542, -8853, 4562, -6342, -1296, -6402, 7393], 7393),
		([-6119, 7999, 2825, -6663, 6881, -7322], 7999),
		([8156, 149, -8942, 276, -5477, 4080, -8213, -1991, 2807, -2854, -7619, -3291, 3724, 8211, -2732, -5317, -5503, 2621, -2349, -8957, 2399], 8211),
		([-9566, 9412, -7359, 3221, -4399, 8878, -5522, -2225, -3055, -5025, 7239, -5744, 3547, -4063, -7652, -9305, 9811, 6948, -8283, 2930, 3300], 9811),
		([4865, 9207, -3220, -747, -2485, 3574, 8768, -1962, 4347, 5911, 3398, -7489, -5765, -3206], 9207),
		([8332, 7413, 4588, -1656, 7165, -2913, 1328, 4597, 1003, -1547, 9058, -439, 5259, 3610, -7135, -9780, -4056, 9817, 1172, 7154, 293, -9088, -3666], 9817),
		([-8074, -6073, 2991, -1594, 9606], 9606),
		([587, 6141, 1749, -8466, -2605, 182, -5660, -8271, 3134, -3550, -4076, 4101, -9597, -5778, 5731, 4323, 318, -820, -6500, 9598], 9598),
		([5794, 4618, -4483, -9214, 9287, 3010, 8450, -6979, -6558, 4785, 7521, -6123, 4776, 4426, 8493], 9287),
		([-922, -820, 9635, -7787, -5638, 6178, -2910, -8517, 4052, 8729, 6653, 9241, -5433, -1296, 4213, 1221, -1381, -2461, 8620, 8054, -304, 1923, 2753], 9635),
		([-7823, -9023, -3940, 3036, 7791, 9339, 7488, 8305, 860, 621, 7909, 8154, -7183, 2533, 4448], 9339),
		([-6827, -175, -1634, -5292, -7174, -1731, -9430, -4676], -175),
	])

	Test(len_function, more_info=DEBUG).run_multiple_tests([
		([8683, 9572, -3302, -5930, -3378, 3913, 8694, -5940, 786, 9855, 408, 9826, -8785, -6639], 14),
		([-9724, 1525, -4309, -9792, -7298, -4284, -4415, -2136, 8460, -765, 5988, 9410, 3531, 1864, -7252, 9724, -1112, 1492, 3179, -4812, 1844, 3437, -4849, -7111, 2542, -9847, -4281, -4604, -4227, -89, -1740, -4422, 1010, -799, -8506, 4363, 5053, -8590, 183], 39),
		([5467, -6458, -3354, 3268, 2114, -8461, 6670, -6429, 1492, 741, 6167, 7946, 7342, -3254, 4131, -785, -5488, 7526], 18),
		([-1656, 3617, -4576, 7030, -2240, -2760, -9693, -4616], 8),
		([-1194, 3614, 7872, 6454, 3858, -8654, -6471, -8649, 4654, -6999, 1206, 70, 8353, 725, 2696, -6405, -6546, 7607, -7860, 8735, 3136, 2016, -7182, -9706, 5318, -5925, 3822, -2692, 2194, 5652, -3386, -6369], 32),
		([7465, -9767, -9166, 6100, 324, -2087, 6540, 4339, -7030], 9),
		([-5564, -2574, -8276, 5541, 9005, -3709, -6164, 8283, -6875], 9),
		([-8458, -9824, -2931, 4397, -873], 5),
		([-619, 9819, 1145, -3318, -1078, -5146, 1597, 7071, -3058, -7802, 9380, -3405, -5604, -3079, 489, -4533, -6267, 8119, 6878, 1032, -7440, 2713, 9822, -9609, 8702, 6186, -9660, 4685, 8689, -3154, -1616, -7649, -4314, 9726, 6346, -5136, -7514, -4025, -8056, 1458, -5169], 41),
		([-7425, -8547, 1423, -9170, -3871, -9989, -263, 8574, -1535, 3853, -2310, -5245, 3772, -8347, -6545, 1255, -9473, 5440, 6798, -2548, -3676, 791, 1353, 1431, 4762, 9174, 376, 8400, -4530, 9553, 5312, -6335, 6303, -4835, 6427, 845, -1687, -3465, -2059, -8003], 40),
		([-4271, -5157, 8342, 8387, -4970, -8628, 7452, -7489, -2739, -2481, -985, -4288, 6451, 1906, -6408, 1837, 3636, 1462, -5951, -430, -4367, 1156, -8825, 6217], 24),
		([-3279, 5637, -9125, -4257, -3712, 6158, -5184, 1811, 6484, 165, -576, -2157, -7005, 3084, -5606], 15),
		([-4469, -7767, -8032, 2658, 3304, -3352, 7844, 133, -883, -7040, -5929, -4306, 4458, -7881, 4840, 7810, 3822, 3730, -1264, -9910, -3122, 4572, -8563, -6200, -782, 6096, -7580, 4149, 9209, -1078, 7591, -8027, 4693, 1251, -1537, -9828, 2982, 3015], 38),
		([-9735, 2221, 3180, 2700, 43, -3814, 4335, -1209, -6514, 9147, 9199, -1144, 9276, 5416, 2869, 5995, 5732, -4942, 6929, -1220, -423, 2835, 6496, -9370, 4191, -315, 3345, 812, 1313, 2474, -6960, -2286, 1738, 8876, -164, 6515, -8015, 9114, 6210, 7613, -1755], 41),
		([-7955, 3446, -699, -2978, -1474, -4158, -7670, 6155, 5888], 9),
		([7740, -6838, -3036, 3173, -5065, 1529, -3586, -8337, -7195, -7385, -3813, 917, -5287, -1942, -4897, -9601, -6924, 6286, -7074, -9197, 4075, -2800, -4545, -8767, 4166], 25),
		([9575, -6616, -9591, -3160, -5908, -813, 2693], 7),
		([-1507, -2216, 222, 1528, 4003, 2827, -7932, -7013, 7285, 5592, -1677, 4519, 5029, -8529, 5114, 1261, 4123, 3954, 24, 4804, -5016, -3579, 2919, -407, -8398, 5252, -2763, 2538], 28),
		([4156, 7150, 1707, -9337, 9263, 513, -7207, -3404, 4398, -779, -1902, 9319, 5942, -9979, -9133, 8518, -2785, -3891], 18),
		([9794, 6821, 7034, -6299, -9018, 4281, 4648, -7007, -7122, -1749, 4442, 4493, 6883, 3379, 4630, -2451, -725, 66, 2059, -3784, -1794, -723, -4371, -370, -3685, 6214, -4698, 3131, -4344, -8273, 3963, 1754, -8740, -6057, -5470, -7451, 1708, 8564, 6899, 5245, 4940], 41),
	])

	Test(sum_function, more_info=DEBUG).run_multiple_tests([
		([8023, -3034, -9089, -5416, 2758, -3847, -8450, -2088, 3920, 3939, 1, 5737, 5273], -2273),
		([-3978, 630, 7485, -740, 1308], 4705),
		([2281, 7249, 2763, 220, -4492, 4468, -2322, -2576, 3560, 3707, 7433, 8155, -929], 29517),
		([6552, -4945, 1459, -9097, 4046, -3004, -1839, -6004, -4348, 5090, -4124, -4695, -9862, -723, -9215, 1732, -4666], -43643),
		([-6256, 9423, -5706, -5765, -8998, 8876, 9133, 747], 1454),
		([-3874, -1441, -1384, 2552, -7059, -3374, -2165, -4948, 3910, 6610], -11173),
		([1432, 3612, -8037, 5896, 3182, 7029, 3657], 16771),
		([305, -1823, 3320, -4260, -2734, -2150, -8787, -1268, -5673, -3116, -481, 3946], -22721),
		([3751, -2582, 6964, 3488, 1535, -19, 3348, 9556, -439, -9178, 7894, -580], 23738),
		([-2229, -9505, 3741, -1252, 4579, -4653, -1294, -5803, -3189, -8290, 4172, -6719, -694, 8854, 3427, 8714], -10141),
		([3447, 8142, 3838, -8790, -555, 1475, -3485, 6216, 3074, 4093, -4186, -5091, -6130, -1363, -5981, -6805, -3275, -6799, -5436], -27611),
		([6963, -8059, 2804, -4215, -5190, -7093, 849, 5238, -8365, -4810, -9801, -8032, 7502, -1514, 9715], -24008),
		([-8154, 549, 6860, -6983, -5172, 6901, 1938, 1891, -9592, 473, -8536, -9533, 4618, 9919, 9393, -8186, 3681], -9933),
		([-8952, 3962, -8400, -6792, 7445, -5841, 1541, 4274, -8394, -3380, -1649, -9537, -6031], -41754),
		([-7332, 8311, 9989, -9667, -5105, 1486, 13, -2221, -9547, -2974, -7983], -25030),
		([-5505, 2566, 3888, -6737, -7069, 5278, -3726, 7849, 8925], 5469),
		([5149, -3074, -9641, 6062, 8723, 7338, -2830, -3322, -8470, -5928, 7377], 1384),
		([2624, 1825, -5163, 7001, -1376, 7395, -2428, -919, -7554, -647], 758),
		([2037, -4005, 5342, -1525, 8547, 4753, -114, -3150, 4325, -5695, 8347, -1938], 16924),
		([-9690, 5189, 4593, -5282, -8852, 1181, -6934, -6214, -6173, 9718, 6643, 6020, 393, -8324, -6120, 7506], -16346),
	])

	Test(square_sum_function, more_info=DEBUG).run_multiple_tests([
		([5995, 4953, -6440, -8780, -3100, 1091, -1563, -4257], 210399533),
		([-5913, 4195, 5072, 6403, 3814, 353, 6506, 6085, 7379, -9889, 6794, 5226], 439023127),
		([8224, 2081, -7101, -8889, 40, 843, 4501, 272, -3320], 233470893),
		([7439, -3816, -3602, -3327, 766, 4124, 9170, 5056, -3138], 231037122),
		([4301, 2845, 1254, -6448, -8320, 3760, -6844, 3314, -8924, -8711, 4599, -2573, 1107, 3673, 5443, 3883, 8741, -4648], 551644506),
		([-4035, -2713, 5772, 3373, -8161, 2255, 3101, 2588], 156335598),
		([1735, -1114, 6716, 4149, -7560, -9627, 7545, 2508, 5317, 5677, 7478, -9770, -7822, 7389, 8808], 684853967),
		([1159, 5065, -6446, -4783, 1892, -2830, -5999, 7577, -3659, 1199, -4390, -3753, 2582], 251262720),
		([-6231, 5676, -3138, 6668, -5191, 2209, 5920, 6059, -8812, -1562, -3978], 324851320),
		([5082, 1518, 3901, 7781, 4026, 2613], 126929255),
		([-6574, -5206, 8952, -4952, -3419, -4081, 9233], 288572931),
		([-8510, 1336, -5250, 1583, 84, -918, 4717, 169, 5519], 157861176),
		([-7661, 8448, 5240, -5392, 5714, -310, -1296, 209, -9361, 5686, -1451, -6360, 9403, 5063], 497624378),
		([-9886, 3950, -7884, 3563, -5555, -1212, 5931, -5168, -715, 4654, -9795], 400512841),
		([3425, -4406, 9634, -9195, 3877, -4521, 5134], 270333968),
		([-7315, -5887, 1752, 4658, -7259, -6470, -6542, -9896, 9721, 3973, 9961, 5669, 3208, -1931, -1606, -212], 606500880),
		([-2227, 8395, -2933, -3527, -8995, 9669, 1773, 1658, -219, 3886, 1636, -5193], 321562553),
		([-7886, -829, -1030, -8860, 294, 2377, -931, -4309, -8533, 6600, -5978, -9212, 6807, -2189, 2357, 6979, 2220, -9696], 608906737),
		([-1513, -3664, -4898, -2442, 9890, 6216, 1976, 1495, -2592, -1938, -4742, -428, 6291, 880, -6654, 820, -7992, 1693], 373439756),
		([8231, -4346, -2634, -6930, -4796], 164601549),
	])
